{"version":3,"sources":["components/CP.js","App.js","components/Allpallets.js","index.js","components/SinglePallete.js"],"names":["CP","props","React","useState","background","setBackground","error","cubName","setCubName","inpVal","useRef","Fragment","color","onChangeComplete","hex","current","value","style","Input","inputRef","Button","onClick","cubname","onclick","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","saveDiv","alignSelf","marginBottom","App","classes","useTheme","open","setOpen","JSON","parse","localStorage","getItem","colors","setColor","cubnames","setName","randomVal","setRandomVal","saveInp","setSaveInp","window","pallets","setPallets","useEffect","setItem","stringify","deleteCubes","e","target","result","filter","element","CopyColor","navigator","clipboard","writeText","then","Alert","variant","severity","err","console","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","noWrap","TextField","label","size","onChange","colorsArray","cubNamesArray","palleteName","trim","pallete","concat","removeItem","alert","to","Drawer","anchor","paper","direction","Divider","splice","ColorArr","i","newColor","Math","random","toString","substr","push","map","index","flexDirection","fontSize","backgroundColor","border","outline","borderRadius","height","cursor","container","flexWrap","outerContainer","textAlign","margin","wordBreak","smallContainer","btnContainer","fontWeight","infoP","moreP","textDecoration","paddingBottom","ReactDOM","render","StrictMode","exact","path","component","styles","allPallets","setAllPallets","val","deletePallete","log","arr","Container","Box","sx","params","useParams","innerText","p","document","getElementById"],"mappings":"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","file":"static/js/main.cdaa109a.chunk.js","sourcesContent":["import React  from \"react\";\r\nimport { SketchPicker } from 'react-color';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction CP (props) {\r\n    const [background , setBackground]= React.useState(\"#E01060\") ; \r\n    const [error , setError]= React.useState(false) ; \r\n    const [cubName , setCubName]= React.useState(\"\") ;\r\n    const inpVal = React.useRef();\r\n    \r\n    const saveColor = () => {\r\n        var color =  background; \r\n        var cubname = cubName; \r\n        return props.onclick(color , cubname);\r\n    }\r\n\r\n    const handleChangeComplete = (color) => {\r\n        setBackground(color.hex) ; \r\n        setCubName(inpVal.current.value);\r\n        inpVal.current.value = \"\" ; \r\n    };\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <SketchPicker   \r\n            color={background}\r\n            onChangeComplete={handleChangeComplete} \r\n            style={{ \"margin\":10 , }}\r\n            />\r\n            <Input  \r\n            error={error} \r\n            inputRef={inpVal} \r\n            style={{\r\n                \"margin\":10 , \r\n                \"width\":\"90%\" }}/>\r\n            <Button \r\n                onClick={saveColor}  \r\n                style={{\r\n                    \"backgroundColor\": background ,\r\n                    \"margin\":10 , \r\n                    \"width\":\"90%\" ,\r\n                    \"padding\":7 , \r\n                    \"color\": \"white\",\r\n                    \"fontWeight\": \"bold\" , \r\n                    \"fontSize\": 15\r\n            }}>ADD COLOR</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default CP ;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon  from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Button from '@material-ui/core/Button';\nimport {TextField} from '@material-ui/core/';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import ColorPicker from \"./components/ColorPicker\";   classbased component same with CP.js\nimport CP from \"./components/CP\";\nimport Alert from '@mui/material/Alert';\nimport {Link} from \"react-router-dom\" ; \n\n\nconst drawerWidth = 340;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  saveDiv: {\n    display:\"flex\" , \n    alignSelf:\"flex-end\" , \n    alignItems:\"center\" , \n    marginLeft: \"auto\" , \n    marginBottom: 10, \n  },\n \n}));\n\n  function App() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false); \n    const [colors, setColor] = React.useState(JSON.parse(localStorage.getItem(\"colors\")) || []);\n    const [cubnames, setName] = React.useState(JSON.parse(localStorage.getItem(\"cubnames\")) || []);\n    const [randomVal, setRandomVal] = React.useState(false); \n    const[saveInp , setSaveInp]= React.useState(\"\");\n    const[pallets , setPallets]= React.useState(JSON.parse(window.localStorage.getItem(\"pallets\")) || []);\n\n    React.useEffect(()=>{ \n      window.localStorage.setItem(\"colors\" , JSON.stringify(colors));\n      window.localStorage.setItem(\"cubnames\" , JSON.stringify(cubnames));\n      window.localStorage.setItem(\"pallets\", JSON.stringify(pallets));\n    }, [colors] , [pallets]); \n\n    const handleDrawerOpen = () => {\n      setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n      setOpen(false);\n    };\n\n    const addColorDiv = (color , cubname ) => {\n      for(let i of colors){\n          if(i=== color){\n            return ; \n          }\n      }\n\n      setColor(colors.concat(color));\n      setName(cubnames.concat(cubname));\n      window.localStorage.setItem(\"colors\" , JSON.stringify(colors));\n      window.localStorage.setItem(\"cubnames\" , JSON.stringify(cubnames));\n    }\n\n    const ClearePal = () => {\n      setColor([]);\n      setName([]);\n      window.localStorage.removeItem(\"colors\");\n      window.localStorage.removeItem(\"cubnames\");\n\n    }\n\n    const generateColor=()=>{\n      if(randomVal){\n        setColor(colors.splice(-28, 28));\n        window.localStorage.setItem(\"colors\" , JSON.stringify(colors));\n        setRandomVal(false) ; \n      }\n      var ColorArr = []; \n      for(let i=0 ; i<28 ; i++){\n        var newColor = '#' +  Math.random().toString(16).substr(-6);\n        ColorArr.push(newColor); \n      }\n      setRandomVal(true) ;\n      setColor(colors.concat(ColorArr));\n      window.localStorage.setItem(\"colors\" , JSON.stringify(colors));\n    }\n\n\n    const savePallete = (e)=> {\n      var value = e.target.value ; \n      setSaveInp(value) ; \n\n    }\n\n    const savePalleteButtonClick = ()=> {\n      var colorsArray = JSON.parse(window.localStorage.getItem(\"colors\"));\n      var cubNamesArray =  JSON.parse(window.localStorage.getItem(\"cubnames\"));\n      var palleteName = saveInp ; \n      if(saveInp.trim() === \"\"){\n        alert(\"Please, add pallete name!\")\n        return;\n      }\n      var pallete = {\n        colorsArray , \n        cubNamesArray , \n        palleteName\n      }\n      var PalletsArray = pallets ;\n      var result = PalletsArray.concat(pallete); \n      setPallets(result);\n\n      window.localStorage.setItem(\"pallets\", JSON.stringify(pallets));\n      window.localStorage.removeItem(\"colors\");\n      window.localStorage.removeItem(\"cubnames\");\n      setColor([]); \n      setName([]);\n      setSaveInp(\"\"); \n    }\n\n    var deleteCubes = (e) => {\n      if(e.target.value === null ){\n       return\n      }\n      var colorArr = colors; \n      var result = colorArr.filter((element)=> element !== e.target.value);\n      setColor(result); \n    }\n\n    var CopyColor = (e) => {\n      navigator.clipboard.writeText(e.target.value).then(function(){\n        // alert('Copying to clipboard was successful!');\n       return(\n        <Alert variant=\"outlined\" severity=\"success\">\n          Color code has been copied!\n        </Alert>); \n\n      }, function(err) {\n        console.error('Async: Could not copy text: ', err);\n      });\n    }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap display=\"flex\">\n            Color Picker\n          </Typography>\n          <div \n          className={classes.saveDiv}\n          >\n            <TextField \n              variant=\"outlined\" \n              label=\"Enter a pallete name\"\n              size=\"small\"\n              value={saveInp}\n              onChange={savePallete}\n            />\n            <Button \n              onClick={savePalleteButtonClick} \n              variant = \"contained\"\n              color = \"secondary\" \n              size= \"small\"\n              style={{marginLeft:10,padding:7.5}}\n            >Save Pallete</Button>\n\n            <Link to=\"/allPallets\"> <Button \n              // onClick={savePalleteButtonClick} \n              variant = \"contained\"\n              color = \"primary\" \n              size= \"small\"\n              style={{marginLeft:10,padding:7.5}}\n            >All Palletes</Button></Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <div \n        style={{\n          \"display\":\"flex\" , \n          \"alignItems\":\"center\" , \n          \"justifyContent\":\"center\" , \n          \"flexDirection\":\"column\",\n          \"padding\":10 , \n        }}>\n\n          <h1>Design your Pallete</h1>\n\n          <div style={{\"padding\":\"5px 15px 15px\"}}>\n              <Button \n              variant = \"contained\"\n              color = \"secondary\" \n              size= \"small\"\n              onClick={ClearePal}\n              >\n              Clear Pallete \n              </Button>\n              <Button\n              variant=\"contained\" \n              color=\"primary\"\n              size= \"small\"\n              style={{\"marginLeft\":5}}\n              onClick={generateColor}\n              >\n              Random Color\n              </Button>\n          </div>\n\n          {/* <ColorPicker onclick={addColorDiv} />  */}\n          <CP  onclick={addColorDiv} />\n        </div>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n        style={{\"paddingLeft\":35}}\n      >\n            <div className={classes.drawerHeader} />\n           <div\n           style={{\n             \"display\":\"flex\" ,\n             \"flexWrap\": \"wrap\",\n             \"alignSelf\": \"center\", \n           }}\n           >\n           {colors[0]? \n            colors.map( (color , index)=>{\n              return(\n                <div \n                  key={`${index}`} \n                  style={{\"backgroundColor\":`${color}` , \n                      \"width\":160 , \n                      \"height\":150 , \n                      \"padding\":10 , \n                      \"fontSize\":18 , \n                      \"fontWeight\":\"bold\" ,\n                      display:\"flex\" , \n                      alignItems:\"flex-start\" , \n                      justifyContent:\"space-between\" , \n                  }}\n                >\n                  <div\n                   style={{\n                   \"width\":75, \n                   \"height\":133, \n                   display:\"flex\" , \n                   flexDirection:\"column\" , \n                   alignItems:\"flex-start\" , \n                   justifyContent:\"space-between\" , \n                  }}\n                  >\n                        <div >{color}</div>\n\n                        <button\n                        onClick={deleteCubes}\n                        value={color}\n                        style={{\n                          fontSize:13,\n                          backgroundColor:\"transparent\" , \n                          border:\".1px solid black\" , \n                          outline:\"none\",\n                          borderRadius:3,\n                          width:65,\n                          height:33, \n                          cursor:\"pointer\",\n                        }}\n                        >\n                        ⛌ \n                        </button>\n\n                  </div>\n                  <div\n                   style={{\n                   \"width\":75, \n                   \"height\":133, \n                   display:\"flex\" , \n                   flexDirection:\"column\" , \n                   alignItems:\"flex-end\" , \n                   justifyContent:\"flex-end\" , \n                  }}\n                  >\n                        <button\n                        onClick={CopyColor}\n                        value={color}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{\n                          fontSize:13,\n                          backgroundColor:\"transparent\" , \n                          border:\".1px solid black\" , \n                          outline:\"none\",\n                          borderRadius:3,\n                          width:65,\n                          height:33,\n                          cursor:\"pointer\",\n                        }}\n                        >\n                        copy\n                        </button>\n                  </div>\n                </div>\n              );\n           }):\n           <div  \n              style={{\n                \"padding\":10 , \n                \"fontSize\":25 , \n                \"fontWeight\":\"bold\" , \n                \"color\":\"lightgray\",\n                \"textAlign\":\"center\",\n              }}\n            >Select Color</div>\n          }\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React  from \"react\";\r\nimport { makeStyles} from '@material-ui/core';\r\nimport { Container , Box  }  from '@material-ui/core/';\r\nimport {  NavLink } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width:\"100%\" , \r\n        display:\"flex\", \r\n        alignItems:\"center\", \r\n        justifyContent:\"center\", \r\n        flexWrap:\"wrap\",\r\n    } , \r\n    outerContainer:{\r\n        border:\"2px solid #180773\",\r\n        padding:10, \r\n        textAlign:\"center\" , \r\n        height:\"250px\",\r\n        width:\"190px\",\r\n        display:\"flex\" , \r\n        alignItems:\"center\", \r\n        justifyContent:\"center\" ,\r\n        flexDirection:\"column\" , \r\n        margin:\"1%\", \r\n        \"& h3\":{\r\n            wordBreak:\"break-word\",\r\n        }\r\n    }, \r\n    smallContainer: {\r\n        width:\"90%\",  \r\n        display:\"flex\" , \r\n        flexWrap:\"wrap\" ,\r\n        height:140, \r\n        border:\"1.5px solid #180773\",\r\n        padding:5, \r\n        \"overflow-y\":\"scroll\" ,   \r\n    }, \r\n    btnContainer:{\r\n        width:\"100%\" , \r\n        display:\"flex\", \r\n        alignItems:\"center\", \r\n        justifyContent:\"space-between\", \r\n        \"& button\":{\r\n            border:\"none\", \r\n            outline:\"none\" , \r\n            backgroundColor:\"darkred\",\r\n            color:\"#fff\", \r\n            fontSize:13, \r\n            fontWeight:\"bold\", \r\n            padding:5,\r\n       }\r\n    }, \r\n    infoP:{\r\n        color: \"gray\" , \r\n        fontWeight:\"bold\" , \r\n    }, \r\n    moreP: {\r\n        color: \"black\", \r\n        fontSize: 30, \r\n        textDecoration:\"none\",\r\n        paddingBottom:14, \r\n    }\r\n\r\n});\r\n\r\nexport default function Allpallets (props) {\r\n    const styles = useStyles(props);\r\n    const [allPallets , setAllPallets] = React.useState(JSON.parse(window.localStorage.getItem(\"pallets\")) || []); \r\n\r\n    React.useEffect(()=>{\r\n        var val = JSON.parse(window.localStorage.getItem(\"pallets\"))\r\n        setAllPallets(val); \r\n    }, [allPallets]);\r\n\r\n    const deletePallete = (e)=>{\r\n        console.log(\"works\");\r\n        var arr = allPallets ; \r\n        for(let i in arr){\r\n            if(i === e.target.value){\r\n                arr.splice(i , 1);  \r\n            }\r\n        }\r\n        setAllPallets(arr);\r\n        window.localStorage.setItem(\"pallets\", JSON.stringify(arr));\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Container>\r\n                {\r\n                    allPallets[0]? \r\n                    <Box  sx={{ \r\n                        display: 'flex', \r\n                        alignItems:\"center\" , \r\n                        justifyContent:\"space-around\" , \r\n                        flexWrap:\"wrap\",\r\n                        padding:20 ,  \r\n                        width:\"70%\",\r\n                        margin:\"0 auto\" ,\r\n                        flexDirection:\"column\",\r\n                    }}\r\n                    >\r\n                        <h1>All Color Palletes</h1>\r\n                        <div className={styles.container}>\r\n                            {allPallets.map((pallete , index)=>{\r\n                            return(\r\n                                <div className={styles.outerContainer}  key={`pallete${index}`}>\r\n    \r\n                                        <div className={styles.smallContainer} >\r\n    \r\n                                            {pallete.colorsArray.map(((color, index)=> <div \r\n                                            style={{backgroundColor: color , \r\n                                                height:20 , \r\n                                                width:20,\r\n                                                display:\"flex\" , \r\n                                            }} \r\n                                            key={`palleteColor${index}`}></div>))}\r\n    \r\n                                        </div>\r\n    \r\n                                    <h3>{pallete.palleteName}</h3> \r\n                                    <div className={styles.btnContainer} >\r\n                                        <NavLink className={styles.moreP} to={`/Pallets/${index}`}>⢰</NavLink>\r\n                                        <button \r\n                                        value={index}\r\n                                        onClick={deletePallete}\r\n                                         >⛌</button>\r\n                                    </div>\r\n    \r\n    \r\n                                </div>\r\n                            );\r\n                            })} \r\n                        </div>\r\n                    </Box>\r\n                    :<Box  sx={{ \r\n                        display: 'flex', \r\n                        alignItems:\"center\" , \r\n                        justifyContent:\"space-around\" , \r\n                        flexWrap:\"wrap\",\r\n                        padding:20 ,  \r\n                        width:\"70%\",\r\n                        margin:\"0 auto\" ,\r\n                        flexDirection:\"column\",\r\n                    }}\r\n                    >\r\n                        <h1>All Color Palletes</h1>\r\n                        <p className={styles.infoP}>There is no saved color pallete</p>\r\n                        \r\n                    </Box>\r\n                }\r\n                \r\n\r\n\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport Allpallets from \"./components/Allpallets\"; \nimport SinglePallete from './components/SinglePallete';\nimport {BrowserRouter , Route, Switch , HashRouter } from \"react-router-dom\" ;\n\n\n// allpalletsde silende refresh olmamis silinmir.ona bir bax , \n// app -da copy-de alert cixart \n\n\n \nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/allPallets\" component={Allpallets} />\n          <Route exact path=\"/Pallets/:value\" component={SinglePallete} />\n        </Switch>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\"; \r\nimport { Container, Box } from \"@material-ui/core\";\r\n \r\nexport default function SinglePallete(params){\r\n    const {value} = useParams(); \r\n    const [allPallets , setAllPallets] = React.useState(JSON.parse(window.localStorage.getItem(\"pallets\")) || []); \r\n\r\n    { \r\n        // console.log(\"value\" , value); \r\n        // console.log(\"allpa\" , allPallets ); \r\n\r\n    }\r\n\r\n    var CopyColor = (e) => {\r\n        navigator.clipboard.writeText(e.target.innerText).then(function(){\r\n            alert('Copying to clipboard was successful!');\r\n        }, function(err) {\r\n          console.error('Async: Could not copy text: ', err);\r\n        });\r\n      }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n                <Box\r\n                sx={{ p: 2,  width: \"95%\", margin:\"0 auto\"}}\r\n                >\r\n                        {allPallets.map((pallete, index)=>{\r\n                            // console.log( \"value index\" , value , index); \r\n                           \r\n                                return (\r\n                                    index==value?\r\n                                    <div key={`big${index}`}>\r\n                                        {pallete.colorsArray.map((color,index)=>{ \r\n                                            return(<div\r\n                                                style={{\r\n                                                    backgroundColor:color ,\r\n                                                    width: \"100%\", \r\n                                                    height:100 , \r\n                                                    padding:10 , \r\n                                                    fontSize:25 ,\r\n                                                    fontWeight:\"bold\", \r\n                                                }}\r\n                                                key={`singlepallte${index}`}\r\n                                                onClick={CopyColor}\r\n                                                >{color}</div>)\r\n                                        })}\r\n                                    </div>\r\n                                    : console.log(index)\r\n                                )\r\n                        \r\n                        })}\r\n            \r\n                </Box>\r\n        </React.Fragment>\r\n    )\r\n}"],"sourceRoot":""}